---
card_esh_device:
  tap_action:
    action: "more-info"
  color: "var(--google-grey-500)"
  show_icon: true
  show_name: true
  show_label: true
  template:
    - "ulm_translation_engine"
  size: "20px"
  triggers_update: all
  variables:
    ulm_custom_card_esh_room_light_entity: null
    ulm_card_esh_room_light_icon_on: "mdi:lightbulb"
    ulm_card_esh_room_light_icon_off: "mdi:lightbulb-off"
    ulm_card_esh_room_light_counter_sensor: null
    entity_1:
      entity_id: null
      icon_on: null
      icon_off: null
      notify_sensor: null
      on_state: null
      color: null
    entity_2:
      entity_id: null
      icon_on: null
      icon_off: null
      notify_sensor: null
      on_state: null
      color: null
    entity_3:
      entity_id: null
      icon_on: null
      icon_off: null
      notify_sensor: null
      on_state: null
      color: null
    entity_4:
      entity_id: null
      icon_on: null
      icon_off: null
      notify_sensor: null
      on_state: null
      color: null
    
  label: >-
    [[[
      var label_entity = variables.ulm_custom_card_esh_room_light_entity
        ? states[variables.ulm_custom_card_esh_room_light_entity]
        : entity;
      if (!label_entity) {
        return "<br />";
      } else if (label_entity.state == "on") {
        var bri = Math.round(label_entity.attributes.brightness / 2.55);
        return (bri ? bri + "%" : variables.ulm_translation_state);
      } else {
        return variables.ulm_translation_state;
      }
    ]]]
  styles:
    card:
      - border-radius: "20px"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    grid:
      - grid-template-areas: >-
          [[[
            return "'i right_top1 right_top2' 'n right_bottom right_bottom' 'l right_bottom right_bottom'";
          ]]]
      - grid-template-columns: "1fr 25% 25%"
      - grid-template-rows: "min-content"
    icon:
      - color: >-
          [[[
            var count = 0;
            if (variables.ulm_custom_card_esh_room_light_entity) {
              count = variables.ulm_custom_card_esh_room_light_entity.filter(entity => states[entity].state == 'on').length;
            }
            if (count > 0)
            {
              return 'rgba(var(--color-yellow), 1)';
            }
            return 'rgba(var(--color-theme), 0.2)';
          ]]]
    img_cell:
      - border-radius: "50%"
      - place-self: "flex-start"
      - width: "42px"
      - height: "42px"
      - margin-left: "12px"
      - background-color: >-
          [[[
            var count = 0;
            if (variables.ulm_custom_card_esh_room_light_entity) {
              count = variables.ulm_custom_card_esh_room_light_entity.filter(entity => states[entity].state == 'on').length;
            }
            if (count > 0)
            {
              return 'rgba(var(--color-yellow), 0.2)';
            }
            return 'rgba(var(--color-theme), 0.05)';
          ]]]
    name:
      - align-self: "end"
      - justify-self: "start"
      - font-weight: "bold"
      - font-size: "14px"
      - margin-left: "12px"
      - margin-top: 8px;
      - max-width: 85%;
      - color: >-
          [[[
            var count = 0;
            if (variables.ulm_custom_card_esh_room_light_entity) {
              count = variables.ulm_custom_card_esh_room_light_entity.filter(entity => states[entity].state == 'on').length;
            }
            if (count > 0){
              return 'rgba(var(color-yellow-text), 1)';
            }
            return 'rgba(var(--color-theme), 0.6)';
          ]]]
    label:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bolder"
      - font-size: "12px"
      - filter: "opacity(40%)"
      - margin-left: "12px"
      - margin-bottom: 0px;
      - max-width: 85%;
    state:
      - justify-self: "start"
      - align-self: "start"
      - font-weight: "bolder"
      - font-size: "12px"
      - filter: "opacity(40%)"
      - margin-left: "12px"
    custom_fields:
      right_top1:
        - align-self: "center"
        - justify-self: "start"
        - font-size: "12px"
        - margin-right: 5px
      right_top2:
        - align-self: "center"
        - justify-self: "start"
        - font-size: "12px"
      notification:
        - border-radius: "50%"
        - position: "absolute"
        - left: "53px"
        - top: "12px"
        - height: "14px"
        - width: "14px"
        - font-size: "8px"
        - line-height: "14px"
        - background-color: "rgba(var(--color-blue),0.75)"
        - color: "white"
        - display: >
            [[[
              if (variables.ulm_card_esh_room_light_counter_sensor && states[variables.ulm_card_esh_room_light_counter_sensor].state > '1'){
                  return "block";
              } else {
                  return "none";
              }
            ]]]
  custom_fields:
    notification: >
     [[[
        var cnt = "0";
        if (variables.ulm_card_esh_room_light_counter_sensor)
            cnt = states[variables.ulm_card_esh_room_light_counter_sensor].state;
        return cnt;
     ]]]
    right_top1: >
     [[[
        return '<ha-icon icon="mdi:lightbulb" style="width: 15px; height: 15px; margin-right:3px"></ha-icon>20°C';
     ]]]
                  
    right_top2: >
      [[[
        return '<ha-icon icon="mdi:lightbulb" style="width: 15px; height: 15px; margin-right:3px"></ha-icon>20°C';
      ]]]
    right_bottom:
      card:
        styles:
          card:
            - border-radius: 0px
            - box-shadow: none
            - background-color: transparent
            - cursor: none
            - --mdc-ripple-press-opacity: 0
            - padding: 0px
          grid:
           - grid-template-areas: >-
                [[[
                    if (variables.entity_3.entity_id && variables.entity_4.entity_id)
                      return "'s3 s4'";
                    else if (variables.entity_3.entity_id)
                      return "'s3 .'";
                    else if (variables.entity_4.entity_id)
                      return "'. s4'";
                    else
                      return "'. .'";
                ]]]
           - grid-template-columns: "1fr 1fr"
           - grid-template-rows: "min-content"
          custom_fields:
            s3:
              - display: >
                 [[[
                   if (variables.entity_3.entity_id) {
                       return "block";
                   } else {
                       return "none";
                   }
                 ]]]
            s4:
              - display: >
                 [[[
                    if (variables.entity_4.entity_id) {
                       return "block";
                   } else {
                       return "none";
                   }
                 ]]]
        type: "custom:button-card"
        tap_action:
          action: none
        custom_fields:
          s3:
            card:
              styles:
                card:
                  - background-color: transparent
                grid:
                  - grid-template-areas: "'sub_icon'"
                custom_fields:
                  notification:
                    - border-radius: "50%"
                    - position: "absolute"
                    - left: "23px"
                    - top: "4px"
                    - height: "12px"
                    - width: "12px"
                    - font-size: "7px"
                    - line-height: "12px"
                    - background-color: "rgba(var(--color-blue),0.75)"
                    - color: "white"
                    - display: >
                        [[[
                            if (variables.entity_3.notify_sensor && variables.entity_3.on_state) {
                               return "block";
                           } else {
                               return "none";
                           }
                        ]]]
              type: "custom:button-card"
              template:
                - "widget_icon"
              show_icon: false
              tap_action:
                action: none 
              custom_fields:
                sub_icon:
                  card:
                    type: "custom:button-card"
                    template:
                     - "widget_icon"
                    icon: >
                      [[[
                        if (variables.entity_3.on_state)
                            return variables.entity_3.icon_on;
                        return variables.entity_3.icon_off;
                      ]]]
                    styles:
                      icon:
                        - color: >-
                            [[[
                              if (variables.entity_3.on_state)
                              {
                                if (variables.entity_3.color)
                                    return `rgba(${variables.entity_3.color}, 1)`;
                                return 'rgba(var(--color-yellow), 1)';
                              }
                              return 'rgba(var(--color-theme), 0.2)';
                            ]]]
                      card:
                        - width: 35px
                        - height: 35px
                        - border-radius: 50%
                        - padding: 8px
                        - background-color: >-
                            [[[
                              if (variables.entity_3.on_state)
                              {
                                  if (variables.entity_3.color)
                                    return `rgba(${variables.entity_3.color}, 0.2)`;
                                  return 'rgba(var(--color-yellow), 0.2)';
                              }
                              return 'rgba(var(--color-theme), 0.05)';
                            ]]]
                    tap_action:
                      action: none 
                notification: >
                  [[[
                    var cnt = "0";
                    if (variables.entity_3.notify_sensor)
                        cnt = states[variables.entity_3.notify_sensor].state;
                    return cnt;
                  ]]]
          s4:
            card:
              styles:
                card:
                  - background-color: transparent
                grid:
                  - grid-template-areas: "'sub_icon'"
                custom_fields:
                  notification:
                    - border-radius: "50%"
                    - position: "absolute"
                    - left: "23px"
                    - top: "4px"
                    - height: "12px"
                    - width: "12px"
                    - font-size: "7px"
                    - line-height: "12px"
                    - background-color: "rgba(var(--color-blue),0.75)"
                    - color: "white"
                    - display: >
                        [[[
                            if (variables.entity_4.notify_sensor && variables.entity_4.on_state) {
                               return "block";
                           } else {
                               return "none";
                           }
                        ]]]
              type: "custom:button-card"
              template:
                - "widget_icon"
              show_icon: false
              tap_action:
                action: none 
              custom_fields:
                sub_icon:
                  card:
                    type: "custom:button-card"
                    template:
                     - "widget_icon"
                    icon: >
                      [[[
                        if (variables.entity_4.on_state)
                            return variables.entity_4.icon_on;
                        return variables.entity_4.icon_off;
                      ]]]
                    styles:
                      icon:
                        - color: >-
                            [[[
                              if (variables.entity_4.on_state)
                              {
                                if (variables.entity_4.color)
                                    return `rgba(${variables.entity_4.color}, 1)`;
                                return 'rgba(var(--color-yellow), 1)';
                              }
                              return 'rgba(var(--color-theme), 0.2)';
                            ]]]
                      card:
                        - width: 35px
                        - height: 35px
                        - border-radius: 50%
                        - padding: 8px
                        - background-color: >-
                            [[[
                              if (variables.entity_4.on_state)
                              {
                                  if (variables.entity_4.color)
                                    return `rgba(${variables.entity_4.color}, 0.2)`;
                                  return 'rgba(var(--color-yellow), 0.2)';
                              }
                              return 'rgba(var(--color-theme), 0.05)';
                            ]]]
                    tap_action:
                      action: none 
                notification: >
                  [[[
                    var cnt = "0";
                    if (variables.entity_4.notify_sensor)
                        cnt = states[variables.entity_4.notify_sensor].state;
                    return cnt;
                  ]]]